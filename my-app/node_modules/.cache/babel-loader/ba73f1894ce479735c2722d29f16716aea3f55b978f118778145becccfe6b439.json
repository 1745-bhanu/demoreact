{"ast":null,"code":"var _jsxFileName = \"/Users/bhanuvardhan/Documents/react/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apiData, setApiData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchApiData = async () => {\n      try {\n        // Fetch data from the external API\n        const response = await fetch('/api/v1/transactions'); // Use relative URL to leverage the proxy\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const jsonData = await response.json();\n        setApiData(jsonData);\n        console.log('Fetched data:', jsonData);\n\n        // Send data to the backend\n        await sendDataToBackend(jsonData);\n      } catch (err) {\n        console.error('Error fetching data from API:', err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchApiData();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const sendDataToBackend = async data => {\n    try {\n      const response = await fetch('http://localhost:5001/api/apidata', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      console.log('Response from backend:', result);\n    } catch (error) {\n      console.error('Error sending data to backend:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fetched Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(apiData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uA/0g9X1KnDNwwsTb8EeVi7eTP0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","loading","setLoading","error","setError","fetchApiData","response","fetch","ok","Error","status","jsonData","json","console","log","sendDataToBackend","err","data","method","headers","body","JSON","stringify","result","children","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["/Users/bhanuvardhan/Documents/react/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [apiData, setApiData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchApiData = async () => {\n      try {\n        // Fetch data from the external API\n        const response = await fetch('/api/v1/transactions'); // Use relative URL to leverage the proxy\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const jsonData = await response.json();\n        setApiData(jsonData);\n        console.log('Fetched data:', jsonData);\n        \n        // Send data to the backend\n        await sendDataToBackend(jsonData);\n      } catch (err) {\n        console.error('Error fetching data from API:', err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchApiData();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const sendDataToBackend = async (data) => {\n    try {\n      const response = await fetch('http://localhost:5001/api/apidata', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      const result = await response.json();\n      console.log('Response from backend:', result);\n    } catch (error) {\n      console.error('Error sending data to backend:', error);\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error.message}</div>;\n\n  return (\n    <div>\n      <h1>Fetched Data</h1>\n      <pre>{JSON.stringify(apiData, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}