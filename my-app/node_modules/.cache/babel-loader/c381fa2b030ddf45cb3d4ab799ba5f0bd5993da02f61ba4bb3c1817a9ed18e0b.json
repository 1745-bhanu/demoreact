{"ast":null,"code":"var _jsxFileName = \"/Users/bhanuvardhan/Documents/react/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState('');\n  const [apiData, setApiData] = useState(null);\n\n  // Function to send user input data to the Flask backend\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Data to send to the backend\n    const payload = {\n      data\n    };\n    try {\n      const response = await fetch('http://localhost:5001/api/data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      console.log('Response from server:', result);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // Function to fetch data from an external API\n  const fetchApiData = async () => {\n    try {\n      // Fetch JSON data from a placeholder API\n      const response = await fetch('/api/v1/transactions');\n      const jsonData = await response.json();\n      setApiData(jsonData); // Store fetched data in state\n\n      console.log('Fetched data from external API:', jsonData);\n\n      // Send the fetched API data to the backend\n      await sendDataToBackend(jsonData);\n    } catch (error) {\n      console.error('Error fetching data from API:', error);\n    }\n  };\n\n  // Function to send fetched API data to the backend\n  const sendDataToBackend = async apiData => {\n    try {\n      const response = await fetch('http://localhost:5001/api/apidata', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(apiData)\n      });\n      const result = await response.json();\n      console.log('Response from backend for API data:', result);\n    } catch (error) {\n      console.error('Error sending API data to backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Send Data to Flask Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: data,\n        onChange: e => setData(e.target.value),\n        placeholder: \"Enter some data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fetch Data from External API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchApiData,\n      children: \"Fetch and Send API Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), apiData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Fetched Data from API:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(apiData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jH4hZr8lljqyPSrv6WQlcibDTF4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","data","setData","apiData","setApiData","handleSubmit","e","preventDefault","payload","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","error","fetchApiData","jsonData","sendDataToBackend","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/bhanuvardhan/Documents/react/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [data, setData] = useState('');\n  const [apiData, setApiData] = useState(null);\n\n  // Function to send user input data to the Flask backend\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Data to send to the backend\n    const payload = { data };\n\n    try {\n      const response = await fetch('http://localhost:5001/api/data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const result = await response.json();\n      console.log('Response from server:', result);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // Function to fetch data from an external API\n  const fetchApiData = async () => {\n    try {\n      // Fetch JSON data from a placeholder API\n      const response = await fetch('/api/v1/transactions');\n\n      \n      const jsonData = await response.json();\n      setApiData(jsonData); // Store fetched data in state\n\n      console.log('Fetched data from external API:', jsonData);\n\n      // Send the fetched API data to the backend\n      await sendDataToBackend(jsonData);\n\n    } catch (error) {\n      console.error('Error fetching data from API:', error);\n    }\n  };\n\n  // Function to send fetched API data to the backend\n  const sendDataToBackend = async (apiData) => {\n    try {\n      const response = await fetch('http://localhost:5001/api/apidata', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(apiData),\n      });\n\n      const result = await response.json();\n      console.log('Response from backend for API data:', result);\n    } catch (error) {\n      console.error('Error sending API data to backend:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Send Data to Flask Backend</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={data}\n          onChange={(e) => setData(e.target.value)}\n          placeholder=\"Enter some data\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n\n      <h1>Fetch Data from External API</h1>\n      <button onClick={fetchApiData}>Fetch and Send API Data</button>\n\n      {apiData && (\n        <div>\n          <h3>Fetched Data from API:</h3>\n          <pre>{JSON.stringify(apiData, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}